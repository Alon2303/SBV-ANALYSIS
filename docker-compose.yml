version: '3.8'

services:
  # PostgreSQL Database (for local development)
  postgres:
    image: postgres:15-alpine
    container_name: sbv_postgres
    environment:
      POSTGRES_USER: sbv_user
      POSTGRES_PASSWORD: sbv_password
      POSTGRES_DB: sbv_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sbv_user -d sbv_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # pgAdmin (Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sbv_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: alonof27@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Redis (for caching and job queue - optional)
  redis:
    image: redis:7-alpine
    container_name: sbv_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

# Usage:
# Start services:  docker-compose up -d
# Stop services:   docker-compose down
# View logs:       docker-compose logs -f postgres
# 
# Access pgAdmin:  http://localhost:5050
# PostgreSQL:      localhost:5432
# Connection string: postgresql://sbv_user:sbv_password@localhost:5432/sbv_db

